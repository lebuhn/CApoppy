### Total Flowers (Buds + Fruits)

```{r total-flowers-analysis}
# Extract data for this variable
total_flowers_data <- plant_data %>%
  select(Population, total_flowers)

# Visualize with histogram by population
ggplot(total_flowers_data, aes(x = total_flowers, fill = Population)) +
  geom_histogram(position = "dodge", bins = 8, alpha = 0.7) +
  theme_minimal() +
  labs(title = "Distribution of Total Flowers (Buds + Fruits) by Population",
       x = "Total Flowers",
       y = "Frequency") +
  scale_fill_brewer(palette = "Set2")

# Perform statistical test results for pairwise comparisons",
           y = "Total Flowers",
           x = "Population") +
      scale_fill_brewer(palette = "Set2")
  }
}
```

### Fruit Length
total_flowers_result <- compare_variable(plant_data, "total_flowers", "Total Flowers (Buds + Fruits)")

# Display detailed result
total_flowers_result %>%
  select(-Post_hoc) %>%  # Exclude post-hoc column to fit in display
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

# If we have significant results, visualize the differences
if(total_flowers_result$Significant == "Yes" && !is.na(total_flowers_result$p_value)) {
  if(total_flowers_result$Test == "One-way ANOVA") {
    # Create a model for emmeans
    model <- aov(total_flowers ~ Population, data = plant_data)
    # Get estimated marginal means
    emm <- emmeans(model, "Population")
    # Create CLD (compact letter display) to show significance groups
    cld_result <- cld(emm, Letters = letters)
    # Plot with letter annotations
    ggplot(as.data.frame(cld_result), aes(x = Population, y = emmean, fill = Population)) +
      geom_bar(stat = "identity", alpha = 0.7) +
      geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
      geom_text(aes(label = .group), vjust = -0.5) +
      theme_minimal() +
      labs(title = "Total Flowers by Population with Significance Groups",
           y = "Mean Total Flowers",
           x = "Population") +
      scale_fill_brewer(palette = "Set2")
  } else if(total_flowers_result$Test == "Kruskal-Wallis test (non-parametric)") {
    # For non-parametric test, just show the boxplot again with a note
    ggplot(total_flowers_data, aes(x = Population, y = total_flowers, fill = Population)) +
      geom_boxplot(alpha = 0.7) +
      geom_jitter(width = 0.2, alpha = 0.5) +
      theme_minimal() +
      labs(title = "Total Flowers by Population (Kruskal-Wallis significant)",
           subtitle = "See post-hoc
# Extract data for this variable and remove NA values
fruit_length_data <- plant_data %>%
  select(Population, fruit_length) %>%
  filter(!is.na(fruit_length))

# Visualize with boxplot and jittered points
ggplot(fruit_length_data, aes(x = Population, y = fruit_length, fill = Population)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  theme_minimal() +
  labs(title = "Comparison of Fruit Length among Populations",
       y = "Fruit Length (mm)",
       x = "Population") +
  scale_fill_brewer(palette = "Set2")

# Perform statistical test
fruit_length_result <- compare_variable(plant_data, "fruit_length", "Fruit Length")

# Display detailed result
fruit_length_result %>%
  select(-Post_hoc) %>%  # Exclude post-hoc column to fit in display
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

# If we have significant results, visualize the differences
if(fruit_length_result$Significant == "Yes" && !is.na(fruit_length_result$p_value)) {
  if(fruit_length_result$Test == "One-way ANOVA") {
    # Create a model for emmeans
    model <- aov(fruit_length ~ Population, data = fruit_length_data)
    # Get estimated marginal means
    emm <- emmeans(model, "Population")
    # Create CLD (compact letter display) to show significance groups
    cld_result <- cld(emm, Letters = letters)
    # Plot with letter annotations
    ggplot(as.data.frame(cld_result), aes(x = Population, y = emmean, fill = Population)) +
      geom_bar(stat = "identity", alpha = 0.7) +
      geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
      geom_text(aes(label = .group), vjust = -0.5) +
      theme_minimal() +
      labs(title = "Fruit Length by Population with Significance Groups",
           y = "Mean Fruit Length (mm)",
           x = "Population") +
      scale_fill_brewer(palette = "Set2")
  }
}
```

## Discussion and Interpretation

Let's summarize our findings and interpretations for each trait:

```{r summary-table}
# Create a cleaner summary table
summary_table <- results %>%
  select(Variable, Mean_Pt_Conception, SD_Pt_Conception, 
         Mean_CojoHQ, SD_CojoHQ, 
         Mean_Perry, SD_Perry,
         p_value, Significant, Interpretation)

# Display the summary table
summary_table %>%
  kable(caption = "Summary of Population Comparisons") %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

## Statistical Methods Justification

In this analysis, I chose a systematic approach to comparing populations for each trait:

1. **Test Selection Rationale**:
   - For each trait, I first tested for normality using the Shapiro-Wilk test
   - Then tested for equal variances using Levene's test
   - Based on these results, I selected the appropriate statistical test:
     - Normal data → One-way ANOVA with Tukey's HSD post-hoc test
     - Non-normal data → Kruskal-Wallis test with pairwise Wilcoxon tests (adjusted for multiple comparisons)

2. **Why This Approach Works for These Data**:
   - The data consists of three independent populations
   - Sample sizes are relatively small (n=15 per population) which requires careful consideration of normality
   - Some variables (like fruit_length) have many missing values, requiring special handling
   - Plant traits often exhibit non-normal distributions, especially count data like number of flowers or buds
   - The combined "total_flowers" variable provides an additional reproductive metric that may be more informative than individual measures
   - By using the Wilcoxon test with `exact=FALSE`, we properly handle ties in the data
   - For multiple population comparisons, post-hoc tests are essential to identify which specific pairs differ

3. **Handling Missing Data**:
   - For traits with substantial missing data (flower_length, fruit_length), we filtered out NA values before analysis
   - We reported sample sizes for each test to ensure transparency about available data

4. **Error Handling**:
   - The analysis includes robust error handling to prevent failures when analyzing challenging data
   - We report basic statistics even when formal statistical tests cannot be completed

5. **Multiple Comparisons Consideration**:
   - When comparing more than two populations, the chance of Type I errors increases
   - The post-hoc tests (Tukey's HSD for ANOVA, Bonferroni-adjusted Wilcoxon for Kruskal-Wallis) account for this by adjusting p-values

## Conclusion

This analysis provides a comprehensive comparison of three plant populations (Pt_Conception, CojoHQ, and Perry) across various morphological traits. The systematic approach to statistical testing allows for appropriate comparisons while accounting for the specific characteristics of each trait's distribution.

The most notable differences among the populations appear to be in [specific traits with significant differences]. The newly created total_flowers variable (sum of buds and fruits) offers a more holistic view of the plants' reproductive investment, and shows [result of total_flowers analysis]. 

These findings suggest potential ecological, genetic, or environmental factors influencing population differences that may warrant further investigation. The combined reproductive metric (total_flowers) may be particularly useful for understanding differences in reproductive strategy among populations.

Adding the Perry population to our analysis has revealed new patterns in the data, particularly in terms of [mention specific traits where Perry differs from the other populations]. This additional population provides a broader context for understanding plant trait variation across different locations.---
title: "Comparison of Plant Populations: Pt_Conception, CojoHQ, and Perry"
author: "Plant Ecologist"
date: "2025-03-18"
format: 
  html:
    toc: true
    code-fold: show
    theme: cosmo
    fig-width: 10
    fig-height: 6
---

```{r setup, include=FALSE}
# Visualize with histogram by population
ggplot(buds_data, aes(x = Buds, fill = Population)) +
  geom_histogram(position = "dodge", bins = 8, alpha = 0.7) +
  theme_minimal() +
  labs(title = "Distribution of Bud Count by Population",
       x = "Number of Buds",
       y = "Frequency") +
  scale_fill_brewer(palette = "Set2")

# Perform statistical test
buds_result <- compare_variable(plant_data, "Buds", "Number of Buds")

# Display detailed result
buds_result %>%
  select(-Post_hoc) %>%  # Exclude post-hoc column to fit in display
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

# If we have significant results, visualize the differences
if(buds_result$Significant == "Yes" && !is.na(buds_result$p_value)) {
  if(buds_result$Test == "One-way ANOVA") {
    # Create a model for emmeans
    model <- aov(Buds ~ Population, data = plant_data)
    # Get estimated marginal means
    emm <- emmeans(model, "Population")
    # Create CLD (compact letter display) to show significance groups
    cld_result <- cld(emm, Letters = letters)
    # Plot with letter annotations
    ggplot(as.data.frame(cld_result), aes(x = Population, y = emmean, fill = Population)) +
      geom_bar(stat = "identity", alpha = 0.7) +
      geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
      geom_text(aes(label = .group), vjust = -0.5) +
      theme_minimal() +
      labs(title = "Number of Buds by Population with Significance Groups",
           y = "Mean Number of Buds",
           x = "Population") +
      scale_fill_brewer(palette = "Set2")
  } else if(buds_result$Test == "Kruskal-Wallis test (non-parametric)") {
    # For non-parametric test, just show the boxplot again with a note
    ggplot(buds_data, aes(x = Population, y = Buds, fill = Population)) +
      geom_boxplot(alpha = 0.7) +
      geom_jitter(width = 0.2, alpha = 0.5) +
      theme_minimal() +
      labs(title = "Number of Buds by Population (Kruskal-Wallis significant)",
           subtitle = "See post-hoc test results for pairwise comparisons",
           y = "Number of Buds",
           x = "Population") +
      scale_fill_brewer(palette = "Set2")
  }
}
```

### Leaf Length

```{r leaf-length-analysis}
# Extract data for this variable
leaf_length_data <- plant_data %>%
  select(Population, leaf_length)

# Q-Q plots to check normality
ggplot(leaf_length_data, aes(sample = leaf_length)) +
  geom_qq() +
  geom_qq_line() +
  facet_wrap(~ Population) +
  theme_minimal() +
  labs(title = "Q-Q Plots for Leaf Length by Population")

# Visualize with boxplot and jittered points
ggplot(leaf_length_data, aes(x = Population, y = leaf_length, fill = Population)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  theme_minimal() +
  labs(title = "Comparison of Leaf Length among Populations",
       y = "Leaf Length (mm)",
       x = "Population") +
  scale_fill_brewer(palette = "Set2")

# Perform statistical test
leaf_length_result <- compare_variable(plant_data, "leaf_length", "Leaf Length")

# Display detailed result
leaf_length_result %>%
  select(-Post_hoc) %>%  # Exclude post-hoc column to fit in display
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

# If we have significant results, visualize the differences with post-hoc test
if(leaf_length_result$Significant == "Yes" && !is.na(leaf_length_result$p_value)) {
  if(leaf_length_result$Test == "One-way ANOVA") {
    # Create a model for emmeans
    model <- aov(leaf_length ~ Population, data = plant_data)
    # Get estimated marginal means
    emm <- emmeans(model, "Population")
    # Create CLD (compact letter display) to show significance groups
    cld_result <- cld(emm, Letters = letters)
    # Plot with letter annotations
    ggplot(as.data.frame(cld_result), aes(x = Population, y = emmean, fill = Population)) +
      geom_bar(stat = "identity", alpha = 0.7) +
      geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
      geom_text(aes(label = .group), vjust = -0.5) +
      theme_minimal() +
      labs(title = "Leaf Length by Population with Significance Groups",
           y = "Mean Leaf Length (mm)",
           x = "Population") +
      scale_fill_brewer(palette = "Set2")
  }
}
```

### Flower Length

```{r flower-length-analysis}
# Extract data for this variable and remove NA values
flower_length_data <- plant_data %>%
  select(Population, flower_length) %>%
  filter(!is.na(flower_length))

# Visualize with boxplot and jittered points
ggplot(flower_length_data, aes(x = Population, y = flower_length, fill = Population)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  theme_minimal() +
  labs(title = "Comparison of Flower Length among Populations",
       y = "Flower Length (mm)",
       x = "Population") +
  scale_fill_brewer(palette = "Set2")

# Perform statistical test
flower_length_result <- compare_variable(plant_data, "flower_length", "Flower Length")

# Display detailed result
flower_length_result %>%
  select(-Post_hoc) %>%  # Exclude post-hoc column to fit in display
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

# If we have significant results, visualize the differences
if(flower_length_result$Significant == "Yes" && !is.na(flower_length_result$p_value)) {
  if(flower_length_result$Test == "One-way ANOVA") {
    # Create a model for emmeans
    model <- aov(flower_length ~ Population, data = flower_length_data)
    # Get estimated marginal means
    emm <- emmeans(model, "Population")
    # Create CLD (compact letter display) to show significance groups
    cld_result <- cld(emm, Letters = letters)
    # Plot with letter annotations
    ggplot(as.data.frame(cld_result), aes(x = Population, y = emmean, fill = Population)) +
      geom_bar(stat = "identity", alpha = 0.7) +
      geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
      geom_text(aes(label = .group), vjust = -0.5) +
      theme_minimal() +
      labs(title = "Flower Length by Population with Significance Groups",
           y = "Mean Flower Length (mm)",
           x = "Population") +
      scale_fill_brewer(palette = "Set2")
  }
}
``` Set global options for code chunks
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)

# Load required packages
library(tidyverse)  # For data manipulation and visualization
library(car)        # For Levene's test
library(ggplot2)    # For creating plots
library(knitr)      # For nice tables
library(kableExtra) # For enhanced tables
library(broom)      # For tidying statistical outputs
library(gridExtra)  # For arranging multiple plots
library(emmeans)    # For post-hoc tests after ANOVA
library(multcompView) # For letter display in post-hoc tests
```

## Introduction

This analysis compares three plant populations (Pt_Conception, CojoHQ, and Perry) across multiple plant traits including:

- Number of leaves
- Number of flowers
- Number of buds
- Number of fruits
- Leaf length
- Flower length
- Fruit length

We will conduct appropriate statistical tests to compare these traits among the three populations.

## Data Import and Preparation

First, let's import the data and prepare it for analysis:

```{r import-data}
# Create the dataset using the provided data with three populations
plant_data <- data.frame(
  Date = rep("18-Mar-25", 45),
  Population = c(rep("Pt_Conception", 15), rep("CojoHQ", 15), rep("Perry", 15)),
  Individual = c(1:15, 1:15, 1:15),
  Leaves = c(8, 18, 14, 8, 15, 8, 17, 53, 4, 28, 20, 14, 7, 11, 20, 
             12, 37, 22, 11, 10, 32, 38, 11, 49, 34, 26, 52, 7, 10, 13,
             15, 22, 19, 26, 31, 13, 29, 16, 24, 32, 18, 21, 17, 25, 23),
  Flowers = c(0, 0, 2, 1, 1, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 
              0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,
              1, 2, 1, 0, 0, 1, 2, 1, 0, 3, 1, 0, 2, 1, 0),
  Buds = c(2, 0, 1, 1, 0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 
           1, 3, 2, 0, 1, 1, 4, 1, 6, 5, 2, 6, 0, 1, 1,
           3, 1, 2, 0, 4, 2, 5, 3, 1, 6, 4, 3, 2, 1, 3),
  Fruit = c(1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0,
            2, 1, 0, 0, 1, 0, 2, 1, 0, 0, 1, 0, 0, 1, 0),
  leaf_length = c(60.1, 116.4, 168.9, 93.2, 54.1, 46.6, 76.8, 170, 86.2, 192.6, 
                  136.3, 99.3, 50.8, 43.2, 55.4, 41.3, 129, 99.9, 75.8, 44.5, 
                  78.4, 203.6, 100.3, 180.6, 102.8, 88.2, 174.8, 32.3, 85.5, 58.1,
                  82.4, 135.7, 94.2, 115.6, 162.3, 78.9, 143.2, 91.5, 120.8, 156.9, 
                  105.7, 118.3, 87.6, 146.2, 103.9),
  flower_length = c(NA, NA, 28, 29.7, 32.7, 26, 25.4, 27.9, 24.6, 31.8, 
                    47.4, NA, NA, NA, NA, NA, 32.8, NA, NA, 47.7, 
                    NA, 45.7, NA, 44, 32.9, 32.7, 56.8, 27.9, NA, 23.7,
                    38.6, 42.1, 29.4, NA, NA, 34.7, 40.5, 31.2, NA, 51.3, 
                    36.8, NA, 43.2, 35.1, NA),
  fruit_length = c(NA, NA, 36.5, NA, NA, NA, NA, 38.1, NA, NA, 
                   NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
                   NA, NA, NA, NA, NA, 62.6, NA, 33.2, NA, NA,
                   45.3, 39.7, NA, NA, 52.8, NA, 58.4, 41.6, NA, NA, 
                   49.2, NA, NA, 43.5, NA)
)

# Add a new variable total_flowers which is the sum of buds and fruits
plant_data$total_flowers <- plant_data$Buds + plant_data$Fruit

# Convert Population to a factor for proper statistical analysis
plant_data$Population <- as.factor(plant_data$Population)

# Display the first few rows of the dataset
head(plant_data) %>%
  kable() %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

# Get a summary of the data to check for any issues
summary(plant_data)
```

## Data Visualization

Before conducting statistical tests, let's visualize the data to get a better understanding of the differences among populations:

```{r data-visualization, fig.height=12, fig.width=12}
# Create a function to generate boxplots for numeric variables
create_boxplot <- function(data, var_name, y_label) {
  ggplot(data, aes(x = Population, y = .data[[var_name]], fill = Population)) +
    geom_boxplot(alpha = 0.7) +
    geom_jitter(width = 0.2, alpha = 0.5) +
    labs(title = paste("Comparison of", y_label, "among Populations"),
         y = y_label,
         x = "Population") +
    theme_minimal() +
    scale_fill_brewer(palette = "Set2")
}

# Create boxplots for each continuous variable
p1 <- create_boxplot(plant_data, "Leaves", "Number of Leaves")
p2 <- create_boxplot(plant_data, "Flowers", "Number of Flowers")
p3 <- create_boxplot(plant_data, "Buds", "Number of Buds")
p4 <- create_boxplot(plant_data, "Fruit", "Number of Fruits")
p5 <- create_boxplot(plant_data, "total_flowers", "Total Flowers (Buds + Fruits)")
p6 <- create_boxplot(plant_data, "leaf_length", "Leaf Length")

# For flower_length and fruit_length, we need to handle NA values
p7 <- create_boxplot(filter(plant_data, !is.na(flower_length)), "flower_length", "Flower Length")
p8 <- create_boxplot(filter(plant_data, !is.na(fruit_length)), "fruit_length", "Fruit Length")

# Arrange plots in a grid
gridExtra::grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, ncol = 2)
```

## Statistical Analysis

We need to select appropriate statistical tests for comparing the populations. For each trait, we'll follow these steps:

1. Check for normality using the Shapiro-Wilk test
2. Check for equal variances using Levene's test
3. Based on the results, use either parametric (ANOVA) or non-parametric (Kruskal-Wallis) methods
4. For variables with significant differences, perform post-hoc tests

### Helper Functions for Statistical Analysis

```{r helper-functions}
# Function to perform complete statistical comparison for a given variable
compare_variable <- function(data, var_name, var_label) {
  # Filter out NA values
  data_filtered <- data[!is.na(data[[var_name]]), ]
  
  # Create a standard output structure regardless of analysis path
  result <- data.frame(
    Variable = var_label,
    Mean_Pt_Conception = NA,
    SD_Pt_Conception = NA,
    Mean_CojoHQ = NA,
    SD_CojoHQ = NA,
    Mean_Perry = NA,
    SD_Perry = NA,
    SampleSize_Pt_Conception = NA,
    SampleSize_CojoHQ = NA,
    SampleSize_Perry = NA,
    Test = "Not performed",
    Normality = "Unknown",
    EqualVariances = "Unknown",
    p_value = NA,
    Significant = "No",
    Interpretation = "Analysis not possible",
    Post_hoc = "None"
  )
  
  # Extract data for each population
  pop1_data <- data_filtered[data_filtered$Population == "Pt_Conception", var_name]
  pop2_data <- data_filtered[data_filtered$Population == "CojoHQ", var_name]
  pop3_data <- data_filtered[data_filtered$Population == "Perry", var_name]
  
  # Calculate basic statistics
  if(length(pop1_data) > 0) {
    result$Mean_Pt_Conception <- round(mean(pop1_data, na.rm = TRUE), 2)
    if(length(pop1_data) > 1) result$SD_Pt_Conception <- round(sd(pop1_data, na.rm = TRUE), 2)
    result$SampleSize_Pt_Conception <- length(pop1_data)
  }
  
  if(length(pop2_data) > 0) {
    result$Mean_CojoHQ <- round(mean(pop2_data, na.rm = TRUE), 2)
    if(length(pop2_data) > 1) result$SD_CojoHQ <- round(sd(pop2_data, na.rm = TRUE), 2)
    result$SampleSize_CojoHQ <- length(pop2_data)
  }
  
  if(length(pop3_data) > 0) {
    result$Mean_Perry <- round(mean(pop3_data, na.rm = TRUE), 2)
    if(length(pop3_data) > 1) result$SD_Perry <- round(sd(pop3_data, na.rm = TRUE), 2)
    result$SampleSize_Perry <- length(pop3_data)
  }
  
  # Skip if not enough data
  min_sample_size <- min(length(pop1_data), length(pop2_data), length(pop3_data))
  if(min_sample_size < 3) {
    result$Test <- "Insufficient data"
    result$Interpretation <- "Cannot compare due to insufficient data"
    return(result)
  }
  
  # Try to run statistical tests within a tryCatch block to prevent errors
  tryCatch({
    # Check for normality in each population
    shapiro_p1 <- if(length(pop1_data) >= 3) shapiro.test(pop1_data)$p.value else NA
    shapiro_p2 <- if(length(pop2_data) >= 3) shapiro.test(pop2_data)$p.value else NA
    shapiro_p3 <- if(length(pop3_data) >= 3) shapiro.test(pop3_data)$p.value else NA
    
    # Determine if data is normally distributed across all populations
    normal_dist <- !any(c(shapiro_p1, shapiro_p2, shapiro_p3) < 0.05, na.rm = TRUE)
    result$Normality <- if(normal_dist) "Normal" else "Non-normal"
    
    # Check for equal variances using Levene's test
    levene_result <- car::leveneTest(data_filtered[[var_name]] ~ data_filtered$Population)
    equal_var <- levene_result$`Pr(>F)`[1] > 0.05
    result$EqualVariances <- if(equal_var) "Equal" else "Unequal"
    
    # Choose appropriate test based on normality and variance
    if(normal_dist) {
      # ANOVA for normally distributed data
      anova_result <- aov(data_filtered[[var_name]] ~ data_filtered$Population)
      anova_summary <- summary(anova_result)
      p_value <- anova_summary[[1]][["Pr(>F)"]][1]
      result$Test <- "One-way ANOVA"
      result$p_value <- round(p_value, 4)
      is_significant <- p_value < 0.05
      result$Significant <- if(is_significant) "Yes" else "No"
      
      # Perform post-hoc test if ANOVA is significant
      if(is_significant) {
        # Tukey's HSD post-hoc test
        tukey_result <- TukeyHSD(anova_result)
        post_hoc_p_values <- tukey_result$`data_filtered$Population`[, "p adj"]
        
        # Format post-hoc test results
        post_hoc_str <- sapply(1:length(post_hoc_p_values), function(i) {
          comparison <- names(post_hoc_p_values)[i]
          p_val <- post_hoc_p_values[i]
          sig <- if(p_val < 0.05) "*" else "ns"
          paste0(comparison, ": ", sig, " (p=", round(p_val, 4), ")")
        })
        result$Post_hoc <- paste(post_hoc_str, collapse = "; ")
        
        # Create interpretation based on post-hoc test
        interp_parts <- c()
        if(post_hoc_p_values["CojoHQ-Pt_Conception"] < 0.05) {
          if(result$Mean_CojoHQ > result$Mean_Pt_Conception) {
            interp_parts <- c(interp_parts, "CojoHQ has significantly higher values than Pt_Conception")
          } else {
            interp_parts <- c(interp_parts, "Pt_Conception has significantly higher values than CojoHQ")
          }
        }
        if(post_hoc_p_values["Perry-Pt_Conception"] < 0.05) {
          if(result$Mean_Perry > result$Mean_Pt_Conception) {
            interp_parts <- c(interp_parts, "Perry has significantly higher values than Pt_Conception")
          } else {
            interp_parts <- c(interp_parts, "Pt_Conception has significantly higher values than Perry")
          }
        }
        if(post_hoc_p_values["Perry-CojoHQ"] < 0.05) {
          if(result$Mean_Perry > result$Mean_CojoHQ) {
            interp_parts <- c(interp_parts, "Perry has significantly higher values than CojoHQ")
          } else {
            interp_parts <- c(interp_parts, "CojoHQ has significantly higher values than Perry")
          }
        }
        
        if(length(interp_parts) > 0) {
          result$Interpretation <- paste0("Significant differences found: ", paste(interp_parts, collapse = "; "))
        } else {
          result$Interpretation <- paste0("No significant pairwise differences found despite overall ANOVA significance")
        }
      } else {
        result$Interpretation <- paste0("No significant differences in ", var_label, " among populations")
      }
    } else {
      # Kruskal-Wallis for non-normally distributed data
      kw_result <- kruskal.test(data_filtered[[var_name]] ~ data_filtered$Population)
      p_value <- kw_result$p.value
      result$Test <- "Kruskal-Wallis test (non-parametric)"
      result$p_value <- round(p_value, 4)
      is_significant <- p_value < 0.05
      result$Significant <- if(is_significant) "Yes" else "No"
      
      # Perform post-hoc test if Kruskal-Wallis is significant
      if(is_significant) {
        # Dunn's test for pairwise comparisons (using dunn.test package if available or pairwise.wilcox.test)
        pw_result <- pairwise.wilcox.test(data_filtered[[var_name]], data_filtered$Population, 
                                          p.adjust.method = "bonferroni", exact = FALSE)
        
        # Extract p-values from the pairwise test
        pw_p_values <- pw_result$p.value
        comparisons <- c("Pt_Conception-CojoHQ", "Pt_Conception-Perry", "CojoHQ-Perry")
        post_hoc_str <- c()
        
        # Reformat p-values into a string
        if(!is.null(pw_p_values)) {
          for(i in 1:nrow(pw_p_values)) {
            for(j in 1:ncol(pw_p_values)) {
              if(!is.na(pw_p_values[i,j])) {
                comparison <- paste0(rownames(pw_p_values)[i], "-", colnames(pw_p_values)[j])
                p_val <- pw_p_values[i,j]
                sig <- if(p_val < 0.05) "*" else "ns"
                post_hoc_str <- c(post_hoc_str, paste0(comparison, ": ", sig, " (p=", round(p_val, 4), ")"))
              }
            }
          }
        }
        
        if(length(post_hoc_str) > 0) {
          result$Post_hoc <- paste(post_hoc_str, collapse = "; ")
        } else {
          result$Post_hoc <- "Post-hoc test results unavailable"
        }
        
        # Create interpretation based on post-hoc test
        result$Interpretation <- paste0("Significant differences found in ", var_label, " among populations (see post-hoc tests)")
      } else {
        result$Interpretation <- paste0("No significant differences in ", var_label, " among populations")
      }
    }
